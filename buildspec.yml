version: 0.2

phases:
  pre_build:
    commands:
      - echo Deploy to eks...
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - echo Build started on `date`
      - echo Deploying to EKS k8s...
      - echo $KOTLIN_DMX_TEMPLATE_V2
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - echo "EKS_CLUSTER_NAME...  $EKS_CLkubectl get deployUSTER_NAME"
      - aws sts get-caller-identity
      - echo $EKS_CLUSTER_NAME
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - kubectl config view --minify
      - kubectl get svc


      #--------------------------
      # DEPLOY
      #--------------------------
      - envsubst < mysql-deployment.yaml.yml | kubectl apply -n wordpress -f -
      - kubectl get pods -n wordpress


  post_build:
    commands:
      - echo Writing image definitions file...




